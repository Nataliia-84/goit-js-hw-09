{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAASC,GACxB,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GAC1CC,YAAW,WAASH,EAClBF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,IAXHQ,QAAQC,IAAId,GAuCZA,EAAOe,iBAAiB,UACxB,SAAuBC,GACrBA,EAAMC,iBAMN,IALA,IAAMC,EAAWC,OAAOnB,EAAOoB,SAASf,MAAMgB,OACxCC,EAAUH,OAAOnB,EAAOoB,SAASG,KAAKF,OACtCG,EAAOL,OAAOnB,EAAOoB,SAASK,OAAOJ,OAGnCK,EAAE,EAAEC,EAAKT,EAAWQ,GAAGF,EAAOE,GAAG,EAAEC,GAAML,EAEjDnB,EAAcuB,EAAEC,GAAMC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACtCP,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBP,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formEl=document.querySelector('.form')\nconsole.dir(formEl);\n\n\nfunction createPromise(position,delay){\n        return new Promise((resolve,reject)=>{\n    const shouldResolve = Math.random() > 0.3;\nsetTimeout(()=>{if (shouldResolve) {\n  resolve({ position, delay })\n} else {\n  reject({ position, delay })\n \n}},delay)\n  \n  })\n}\n\n// formEl.addEventListener('submit',onClickSubmit)\n// function onClickSubmit(event){\n//   event.preventDefault()\n//   // const firstDelay=Number(formEl.elements.delay.value);\n//   // const stepDelay=Number(formEl.elements.step.value);\n//   // const amoutn=Number(formEl.elements.amount.value);\n\n//  let {delay:{value:delay}, step:{value:step}, amount:{value:amount}} =event.currentTarget.elements;\n//  delay=Number(delay);\n//  step=Number(step);\n//  amount=Number(amount);\n//   for(let i=1;i<=amount;i+=1){\n  \n//   createPromise(i,delay).then(({ position, delay }) => {\n//     Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   })\n// delay+=step\n// }}\n\n\nformEl.addEventListener('submit',onClickSubmit)\nfunction onClickSubmit(event){\n  event.preventDefault()\n  const firstDelay=Number(formEl.elements.delay.value);\n  const stepDelay=Number(formEl.elements.step.value);\n  const amoutn=Number(formEl.elements.amount.value);\n\n\n  for(let i=1,time=firstDelay;i<=amoutn;i+=1,time+=stepDelay){\n  \n  createPromise(i,time).then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })\n\n}}\n\n\n\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","dir","addEventListener","event","preventDefault","firstDelay","Number","elements","value","stepDelay","step","amoutn","amount","i","time","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.447d4348.js.map"}